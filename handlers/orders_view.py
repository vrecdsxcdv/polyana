from telegram import Update
from telegram.ext import ContextTypes
from db.session import SessionLocal
from db.models import Order

async def cb_view_order(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()  # —á—Ç–æ–±—ã Telegram –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª "–∑–∞–≥—Ä—É–∑–∫–∞..."

    session = SessionLocal()
    try:
        # Parse order ID from callback data (format: "order:view:123")
        order_id = query.data.split(":")[-1]
        order = session.query(Order).filter(Order.id == order_id).first()

        if not order:
            await query.edit_message_text("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –±—ã–ª —É–¥–∞–ª—ë–Ω.")
            return

        text = (
            f"üì¶ *–í–∞—à –∑–∞–∫–∞–∑ ‚Ññ{order.id}*\n\n"
            f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {order.category}\n"
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {order.qty}\n"
            f"–°—Ç–∞—Ç—É—Å: {order.status}\n"
            f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {order.comment or '‚Äî'}\n\n"
            f"üïí –î–∞—Ç–∞: {order.created_at.strftime('%d.%m.%Y %H:%M')}"
        )

        await query.edit_message_text(
            text=text,
            parse_mode="Markdown"
        )

    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∑–∞–∫–∞–∑–∞:", e)
        await query.edit_message_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    finally:
        session.close()




