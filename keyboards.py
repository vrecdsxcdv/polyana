"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±–æ—Ç–∞ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏.
"""

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from services.callbacks import OP_TAKE, OP_READY, OP_NEEDS_FIX, OP_CONTACT, make_cb
from services.callbacks import CANCEL_YES, CANCEL_NO

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ (–µ–¥–∏–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∞–≤–¥—ã)
BTN_NEW_ORDER = "üìù –ù–æ–≤—ã–π –∑–∞–∫–∞–∑"
BTN_MY_ORDERS = "üìä –ú–æ–∏ –∑–∞–∫–∞–∑—ã"
BTN_SUPPORT = "üë®‚Äçüí¨ –ü–æ–∑–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞"
BTN_HELP = "‚ùì –ü–æ–º–æ—â—å"
BTN_BACK = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
BTN_CANCEL = "‚ùå –û—Ç–º–µ–Ω–∞"
BTN_NEXT = "‚û°Ô∏è –î–∞–ª–µ–µ"
BTN_SKIP = "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
BTN_SUBMIT = "–ì–æ—Ç–æ–≤–æ"

BTN_BC = "–í–∏–∑–∏—Ç–∫–∏"
BTN_FLY = "–§–ª–∞–µ—Ä—ã"
BTN_BNR = "–ë–∞–Ω–Ω–µ—Ä—ã"
BTN_PLK = "–ü–ª–∞–∫–∞—Ç—ã"
BTN_STK = "–ù–∞–∫–ª–µ–π–∫–∏"
BTN_OTHER = "–î—Ä—É–≥–æ–µ"
BTN_1 = "–û–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω—è—è"
BTN_2 = "–î–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è"
BTN_BC_SIZE = "–í–∏–∑–∏—Ç–∫–∞ 90√ó50"
BTN_LOAD_MORE = "–ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë‚Ä¶"

# –¢–∏–ø—ã –ø–µ—á–∞—Ç–∏
PRINT_TYPES = ["–í–∏–∑–∏—Ç–∫–∏", "–§–ª–∞–µ—Ä—ã", "–ë–∞–Ω–Ω–µ—Ä—ã", "–ü–ª–∞–∫–∞—Ç—ã", "–ù–∞–∫–ª–µ–π–∫–∏", "–î—Ä—É–≥–æ–µ"]

# –ê–ª–∏–∞—Å—ã –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–≤–æ–¥–∞
ALIAS = {
    "–¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è": "2-sided",
    "2-—Å—Ç–æ—Ä–æ–Ω–Ω—è—è": "2-sided", 
    "2 sided": "2-sided",
    "–¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –ø–µ—á–∞—Ç—å": "2-sided",
    "–æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω—è—è": "1-sided",
    "1 sided": "1-sided",
    "–æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –ø–µ—á–∞—Ç—å": "1-sided",
    "—Ü–≤–µ—Ç–Ω–∞—è": "4+4",
    "—Ü–≤–µ—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å": "4+4",
    "—á/–±": "1+0",
    "—á–µ—Ä–Ω–æ-–±–µ–ª–∞—è": "1+0",
    "—á–µ—Ä–Ω–æ –±–µ–ª–∞—è": "1+0",
    "–¥–∞": "yes",
    "–Ω–µ—Ç": "no",
    "–µ—Å—Ç—å": "yes",
    "–µ—Å—Ç—å –º–∞–∫–µ—Ç": "yes",
    "–Ω–µ—Ç –º–∞–∫–µ—Ç–∞": "no",
    "–¥–∏–∑–∞–π–Ω–µ—Ä": "designer",
    "–Ω—É–∂–µ–Ω –¥–∏–∑–∞–π–Ω–µ—Ä": "designer",
    "–Ω—É–∂–µ–Ω": "designer"
}

def norm(text: str) -> str:
    """–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è."""
    return (text or "").strip().casefold()

def alias_map(s: str) -> str:
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –∞–ª–∏–∞—Å—ã –∫ —Ç–µ–∫—Å—Ç—É."""
    s2 = norm(s)
    return ALIAS.get(s2, s)


def get_keyboard_remove() -> ReplyKeyboardRemove:
    """–£–¥–∞–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–±—Ä–æ—Å–∞ –∫–µ—à–∞."""
    return ReplyKeyboardRemove()

def get_home_keyboard() -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞."""
    return ReplyKeyboardMarkup(
        [
            ["üÜï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑"],                       # –∫—Ä—É–ø–Ω–∞—è –≤–µ—Ä—Ö–Ω—è—è
            ["üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã", "‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º"],          # –Ω–∏–∂–Ω–∏–π —Ä—è–¥
            ["‚ùì –ü–æ–º–æ—â—å"],
        ],
        resize_keyboard=True,
        is_persistent=True,
    )


def get_product_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∞."""
    return ReplyKeyboardMarkup([
        ["ü™™ –í–∏–∑–∏—Ç–∫–∏", "üìÑ –§–ª–∞–µ—Ä—ã"],
        ["üñº –ë–∞–Ω–Ω–µ—Ä—ã", "üì∞ –ü–ª–∞–∫–∞—Ç—ã"],
        ["üè∑ –ù–∞–∫–ª–µ–π–∫–∏", "üìö –õ–∏—Å—Ç—ã"],
        ["üì¶ –î—Ä—É–≥–æ–µ"],
        ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "‚ùå –û—Ç–º–µ–Ω–∞"]
    ], resize_keyboard=True, is_persistent=True)


def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)."""
    return get_home_keyboard()


def get_navigation_keyboard(show_skip: bool = False) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–ù–∞–∑–∞–¥, –û—Ç–º–µ–Ω–∞)."""
    buttons = [
        [InlineKeyboardButton(BTN_BACK, callback_data="back")],
        [InlineKeyboardButton(BTN_CANCEL, callback_data="cancel")]
    ]
    
    if show_skip:
        buttons.insert(-1, [InlineKeyboardButton(BTN_SKIP, callback_data="skip")])
    
    return InlineKeyboardMarkup(buttons)


def get_what_to_print_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–µ—á–∞—Ç–∏."""
    buttons = [
        [InlineKeyboardButton("–í–∏–∑–∏—Ç–∫–∏", callback_data="business_cards")],
        [InlineKeyboardButton("–§–ª–∞–µ—Ä—ã", callback_data="booklets")],
        [InlineKeyboardButton("–ë–∞–Ω–Ω–µ—Ä—ã", callback_data="banners")],
        [InlineKeyboardButton("–ü–ª–∞–∫–∞—Ç—ã", callback_data="posters")],
        [InlineKeyboardButton("–ù–∞–∫–ª–µ–π–∫–∏", callback_data="stickers")],
        [InlineKeyboardButton("–î—Ä—É–≥–æ–µ", callback_data="other")],
        [InlineKeyboardButton(BTN_BACK, callback_data="back")],
        [InlineKeyboardButton(BTN_CANCEL, callback_data="cancel")]
    ]
    return InlineKeyboardMarkup(buttons)


def get_format_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞."""
    buttons = [
        [InlineKeyboardButton("A4 (210√ó297 –º–º)", callback_data="a4")],
        [InlineKeyboardButton("A5 (148√ó210 –º–º)", callback_data="a5")],
        [InlineKeyboardButton("A6 (105√ó148 –º–º)", callback_data="a6")],
        [InlineKeyboardButton("A3 (297√ó420 –º–º)", callback_data="a3")],
        [InlineKeyboardButton("–ë–∞–Ω–Ω–µ—Ä –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞", callback_data="banner")],
        [InlineKeyboardButton("–î—Ä—É–≥–æ–π —Ä–∞–∑–º–µ—Ä", callback_data="other")],
        [InlineKeyboardButton(BTN_BACK, callback_data="back")],
        [InlineKeyboardButton(BTN_CANCEL, callback_data="cancel")]
    ]
    return InlineKeyboardMarkup(buttons)


def get_sides_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç–æ—Ä–æ–Ω –ø–µ—á–∞—Ç–∏."""
    buttons = [
        [InlineKeyboardButton("–û–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω—è—è", callback_data="1_sided")],
        [InlineKeyboardButton("–î–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è", callback_data="2_sided")],
        [InlineKeyboardButton(BTN_BACK, callback_data="back")],
        [InlineKeyboardButton(BTN_CANCEL, callback_data="cancel")]
    ]
    return InlineKeyboardMarkup(buttons)


def get_color_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–Ω–æ—Å—Ç–∏."""
    buttons = [
        [InlineKeyboardButton("4+0 (—Ü–≤–µ—Ç–Ω–∞—è —Å –æ–¥–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã)", callback_data="4_0")],
        [InlineKeyboardButton("4+4 (—Ü–≤–µ—Ç–Ω–∞—è —Å –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω)", callback_data="4_4")],
        [InlineKeyboardButton("–ß/–ë (—á–µ—Ä–Ω–æ-–±–µ–ª–∞—è)", callback_data="1_0")],
        [InlineKeyboardButton(BTN_BACK, callback_data="back")],
        [InlineKeyboardButton(BTN_CANCEL, callback_data="cancel")]
    ]
    return InlineKeyboardMarkup(buttons)


def get_paper_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –±—É–º–∞–≥–∏."""
    buttons = [
        [InlineKeyboardButton("130 –≥/–º¬≤", callback_data="130")],
        [InlineKeyboardButton("170 –≥/–º¬≤", callback_data="170")],
        [InlineKeyboardButton("300 –≥/–º¬≤", callback_data="300")],
        [InlineKeyboardButton("–î—Ä—É–≥–∞—è", callback_data="other")],
        [InlineKeyboardButton(BTN_BACK, callback_data="back")],
        [InlineKeyboardButton(BTN_CANCEL, callback_data="cancel")]
    ]
    return InlineKeyboardMarkup(buttons)


def get_finishing_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–æ—Å—Ç–ø–µ—á–∞—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏."""
    buttons = [
        [InlineKeyboardButton("–õ–∞–º–∏–Ω–∞—Ü–∏—è", callback_data="lamination")],
        [InlineKeyboardButton("–ë–∏–≥–æ–≤–∫–∞", callback_data="scoring")],
        [InlineKeyboardButton("–§–∞–ª—å—Ü–æ–≤–∫–∞", callback_data="folding")],
        [InlineKeyboardButton("–í—ã—Ä—É–±–∫–∞", callback_data="cutting")],
        [InlineKeyboardButton("–ë–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏", callback_data="none")],
        [InlineKeyboardButton(BTN_BACK, callback_data="back")],
        [InlineKeyboardButton(BTN_CANCEL, callback_data="cancel")]
    ]
    return InlineKeyboardMarkup(buttons)


def get_has_layout_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –Ω–∞–ª–∏—á–∏—è –º–∞–∫–µ—Ç–∞."""
    buttons = [
        [InlineKeyboardButton("–î–∞, –µ—Å—Ç—å –º–∞–∫–µ—Ç", callback_data="yes")],
        [InlineKeyboardButton("–ù–µ—Ç –º–∞–∫–µ—Ç–∞", callback_data="no")],
        [InlineKeyboardButton("–ù—É–∂–µ–Ω –¥–∏–∑–∞–π–Ω–µ—Ä", callback_data="designer")],
        [InlineKeyboardButton(BTN_BACK, callback_data="back")],
        [InlineKeyboardButton(BTN_CANCEL, callback_data="cancel")]
    ]
    return InlineKeyboardMarkup(buttons)


def get_confirmation_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞."""
    buttons = [
        [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm")],
        [InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="edit")],
        [InlineKeyboardButton("üë®‚Äçüíº –ü–æ–∑–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", callback_data="call_operator")],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ]
    return InlineKeyboardMarkup(buttons)


def get_operator_keyboard(order_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç callback_data)."""
    buttons = [
        [
            InlineKeyboardButton("üõ† –ü—Ä–∏–Ω—è—Ç—å", callback_data=make_cb(OP_TAKE, order_id)),
            InlineKeyboardButton("‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data=make_cb(OP_READY, order_id))
        ],
        [
            InlineKeyboardButton("‚úèÔ∏è –ù—É–∂–Ω—ã –ø—Ä–∞–≤–∫–∏", callback_data=make_cb(OP_NEEDS_FIX, order_id)),
            InlineKeyboardButton("üì® –°–≤—è–∑–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º", callback_data=make_cb(OP_CONTACT, order_id))
        ]
    ]
    return InlineKeyboardMarkup(buttons)


def get_cancel_confirm_keyboard() -> InlineKeyboardMarkup:
    kb = [
        [InlineKeyboardButton("‚úÖ –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å", callback_data=CANCEL_YES)],
        [InlineKeyboardButton("‚Ü©Ô∏è –ù–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data=CANCEL_NO)],
    ]
    return InlineKeyboardMarkup(kb)


def get_bc_qty_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏—Ä–∞–∂–∞ –≤–∏–∑–∏—Ç–æ–∫."""
    return ReplyKeyboardMarkup(
        [["50", "100"], ["500", "1000"], [BTN_BACK, BTN_CANCEL]], 
        resize_keyboard=True, 
        is_persistent=True
    )


def get_bc_size_keyboard(allow_custom: bool = False) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ –≤–∏–∑–∏—Ç–æ–∫."""
    buttons = [[BTN_BC_SIZE]]
    if allow_custom:
        buttons.append(["–í–∞—à —Ä–∞–∑–º–µ—Ä"])
    buttons.append([BTN_BACK, BTN_CANCEL])
    return ReplyKeyboardMarkup(buttons, resize_keyboard=True, is_persistent=True)


def get_sides_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–æ—Ä–æ–Ω –ø–µ—á–∞—Ç–∏."""
    return ReplyKeyboardMarkup(
        [[BTN_1, BTN_2], [BTN_BACK, BTN_CANCEL]], 
        resize_keyboard=True, 
        is_persistent=True
    )


def get_fly_format_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –±—É–∫–ª–µ—Ç–∞."""
    return ReplyKeyboardMarkup(
        [["A7 105√ó74", "A6 105√ó148"], ["A5 210√ó148", "A4 210√ó297"], [BTN_BACK, BTN_CANCEL]], 
        resize_keyboard=True, 
        is_persistent=True
    )


def get_upload_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞–∫–µ—Ç–∞."""
    return ReplyKeyboardMarkup(
        [[BTN_NEXT], [BTN_BACK, BTN_CANCEL]], 
        resize_keyboard=True, 
        is_persistent=True
    )


def get_notes_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–∂–µ–ª–∞–Ω–∏–π."""
    return ReplyKeyboardMarkup(
        [[BTN_SKIP], [BTN_BACK, BTN_CANCEL]], 
        resize_keyboard=True, 
        is_persistent=True
    )


def get_confirm_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."""
    return ReplyKeyboardMarkup(
        [[BTN_SUBMIT], [BTN_BACK, BTN_CANCEL]], 
        resize_keyboard=True, 
        is_persistent=True
    )


def get_layout_keyboard() -> ReplyKeyboardMarkup:
    kb = [[BTN_NEXT, BTN_CANCEL], [BTN_BACK]]
    return ReplyKeyboardMarkup(kb, resize_keyboard=True, is_persistent=True, one_time_keyboard=False)


def orders_list_inline(items, has_more=False):
    """–ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤."""
    rows = [[InlineKeyboardButton(f"{title} {status}", callback_data=f"ord:{oid}")]
            for oid, title, status in items]
    if has_more:
        rows.append([InlineKeyboardButton(BTN_LOAD_MORE, callback_data="ord:more")])
    return InlineKeyboardMarkup(rows)


def get_sheet_format_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ª–∏—Å—Ç–∞."""
    return ReplyKeyboardMarkup(
        [
            ["A5 (210√ó148 –º–º)", "A4 (297√ó210 –º–º)"],
            ["A3 (420√ó297 –º–º)", "–í–∞—à —Ä–∞–∑–º–µ—Ä"],
            [BTN_BACK, BTN_CANCEL]
        ],
        resize_keyboard=True,
        is_persistent=True
    )


def get_postpress_keyboard(lamination: str = "none", bigovka_count: int = 0, corner_rounding: bool = False) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å—Ç–ø–µ—á–∞—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏."""
    lamination_labels = {
        "none": "–õ–∞–º–∏–Ω–∞—Ü–∏—è (–Ω–µ—Ç)",
        "matte": "–õ–∞–º–∏–Ω–∞—Ü–∏—è (–º–∞—Ç)",
        "glossy": "–õ–∞–º–∏–Ω–∞—Ü–∏—è (–≥–ª—è–Ω–µ—Ü)"
    }
    
    bigovka_text = f"–ë–∏–≥–æ–≤–∫–∞ ({bigovka_count})" if bigovka_count > 0 else "–ë–∏–≥–æ–≤–∫–∞"
    corner_text = "–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ (–¥–∞)" if corner_rounding else "–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ (–Ω–µ—Ç)"
    
    return ReplyKeyboardMarkup(
        [
            [lamination_labels.get(lamination, "–õ–∞–º–∏–Ω–∞—Ü–∏—è (–Ω–µ—Ç)")],
            [bigovka_text],
            [corner_text],
            ["–ë–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏"],
            [BTN_NEXT],
            [BTN_BACK, BTN_CANCEL]
        ],
        resize_keyboard=True,
        is_persistent=True
    )

# alias for backward compatibility (–∏–º–ø–æ—Ä—Ç –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞)
get_postprocess_keyboard = get_postpress_keyboard


def get_cancel_choice_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–º–µ–Ω—ã."""
    return ReplyKeyboardMarkup(
        [
            ["‚Ü©Ô∏è –¢–æ–ª—å–∫–æ —ç—Ç–æ—Ç —à–∞–≥"],
            ["üóë –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑"],
            [BTN_BACK]
        ],
        resize_keyboard=True,
        is_persistent=True
    )


def get_format_selection_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞."""
    return ReplyKeyboardMarkup([
        ["A7 (105√ó74 –º–º)", "A6 (148√ó105 –º–º)"],
        ["A5 (210√ó148 –º–º)", "A4 (297√ó210 –º–º)"],
        ["A3 (420√ó297 –º–º)", "A2 (594√ó420 –º–º)"],
        ["A1 (841√ó594 –º–º)", "–í–∞—à —Ä–∞–∑–º–µ—Ä"],
        [BTN_BACK, BTN_CANCEL]
    ], resize_keyboard=True, is_persistent=True)


def get_material_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –¥–ª—è –Ω–∞–∫–ª–µ–µ–∫."""
    return ReplyKeyboardMarkup([
        ["üìÑ –ë—É–º–∞–≥–∞", "üéØ –í–∏–Ω–∏–ª"],
        [BTN_BACK, BTN_CANCEL]
    ], resize_keyboard=True, is_persistent=True)


def get_print_color_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–Ω–æ—Å—Ç–∏ –ø–µ—á–∞—Ç–∏."""
    return ReplyKeyboardMarkup([
        ["üé® –¶–≤–µ—Ç–Ω–∞—è", "‚ö´ –ß/–ë"],
        [BTN_BACK, BTN_CANCEL]
    ], resize_keyboard=True, is_persistent=True)


def get_banner_size_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ä–∞–∑–º–µ—Ä–∞ –±–∞–Ω–Ω–µ—Ä–∞."""
    return ReplyKeyboardMarkup([
        [BTN_BACK, BTN_CANCEL]
    ], resize_keyboard=True, is_persistent=True)


def get_print_format_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–ª—è –æ–±—ã—á–Ω–æ–π –ø–µ—á–∞—Ç–∏."""
    return ReplyKeyboardMarkup([
        ["A4 (210√ó297 –º–º)", "A3 (297√ó420 –º–º)"],
        [BTN_BACK, BTN_CANCEL]
    ], resize_keyboard=True, is_persistent=True)


def get_print_type_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–µ—á–∞—Ç–∏."""
    return ReplyKeyboardMarkup([
        ["üñ§ –ß—ë—Ä–Ω–æ-–±–µ–ª–∞—è", "üé® –¶–≤–µ—Ç–Ω–∞—è"],
        [BTN_BACK, BTN_CANCEL]
    ], resize_keyboard=True, is_persistent=True)


def get_postpress_options_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∏."""
    return ReplyKeyboardMarkup([
        ["‚ú® –õ–∞–º–∏–Ω–∞—Ü–∏—è (–º–∞—Ç)", "‚ú® –õ–∞–º–∏–Ω–∞—Ü–∏—è (–≥–ª—è–Ω–µ—Ü)"],
        ["‚ûñ –ë–∏–≥–æ–≤–∫–∞", "üîò –°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤"],
        ["–ù–µ—Ç", BTN_BACK]
    ], resize_keyboard=True, is_persistent=True)


def get_smart_cancel_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–º–Ω–æ–π –æ—Ç–º–µ–Ω—ã."""
    return ReplyKeyboardMarkup([
        ["‚Ü©Ô∏è –¢–æ–ª—å–∫–æ —à–∞–≥", "üóë –í–µ—Å—å –∑–∞–∫–∞–∑"]
    ], resize_keyboard=True, is_persistent=True)